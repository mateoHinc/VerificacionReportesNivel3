@page "/verificar"
@inject HttpClient Http

<h3>Verificación</h3>

@* <EditForm Model="verificacion" OnValidSubmit="EnviarVerificacion"> *@
@*     <DataAnnotationsValidator /> *@
@*     <ValidationSummary /> *@

@*     <div class="mb-2"> *@
@*         <label for="cedula">Cédula del Cliente:</label><br /> *@
@*         <InputText id="cedula" class="form-control" @bind-Value="verificacion.CedulaCliente" /> *@
@*     </div> *@

@*     <div class="mb-2"> *@
@*         <label for="nombre">Nombre a verificar:</label><br /> *@
@*         <InputText id="nombre" class="form-control" @bind-Value="verificacion.Nombre" /> *@
@*     </div> *@

@*     <div class="mb-2"> *@
@*         <label for="texto">Texto de Entrada:</label><br /> *@
@*         <InputTextArea id="texto" class="form-control" rows="3" @bind-Value="verificacion.Texto" /> *@
@*     </div> *@

@*     <button class="btn btn-primary" type="submit">Verificar</button> *@
@* </EditForm> *@

@* @if(resultadoVerificacion is not null) *@
@* { *@
@* 	<p class="mt-3"> *@
@* 		Resultado: <strong>@(resultadoVerificacion.Value ? "Contiene el nombre" : "No contiene el nombre")</strong> *@
@* 	</p> *@
@* } *@

@code {
	// private VerificacionRequest verificacionRequest = new();
	// private bool? resultadoVerificacion;

	// private async Task EnviarVerificacion()
	// {
	// 	var response = await Http.PostAsJsonAsync("api/verificaciones/verificar", verificacion);

	// 	if(response.IsSuccessStatusCode)
	// 	{
	// 		var json = await response.Content.ReadFromJsonAsync<VerificacionResponse>();
	// 		resultadoVerificacion = json?.contieneNombre;
	// 	}
	// }

	// public class VerificacionRequest
	// {
	// 	public string CedulaCliente { get; set; }
	// 	public string Text { get; set; }
	// 	public string Nombre { get; set; }
	// }

	// public class VerificacionResponse
	// {
	// 	public bool contieneNombre { get; set; }
	// }
}
